run = "bash -c 'python run_telegram_bot.py &' && gunicorn --bind 0.0.0.0:5000 --workers 2 main:app"
language = "python3"
hidden = [".config", "pyproject.toml", ".replit", "replit.nix", ".gitignore", "venv", ".upm", "poetry.lock", "**/__pycache__", "**/.mypy_cache", "**/*.pyc"]
modules = ["python-3.11", "web", "bash", "nodejs-20"]

[nix]
channel = "stable-24_05"

[deployment]
run = ["sh", "-c", "bash -c 'python run_telegram_bot.py &' && gunicorn --bind 0.0.0.0:5000 --workers 2 main:app"]
deploymentTarget = "cloudrun"

[env]
PYTHONUNBUFFERED = "1"

[languages]

[languages.python3]
pattern = "**/*.py"

[languages.python3.languageServer]
start = "pylsp"

[debugger]
support = true

[debugger.interactive]
transport = "localhost:0"
startCommand = ["dap-python", "main.py"]

[debugger.interactive.integratedAdapter]
dapTcpAddress = "localhost:0"

[debugger.interactive.initializeMessage]
command = "initialize"
type = "request"

[debugger.interactive.initializeMessage.arguments]
adapterID = "debugpy"
clientID = "replit"
clientName = "replit.com"
columnsStartAt1 = true
linesStartAt1 = true
locale = "en-us"
pathFormat = "path"
supportsInvalidatedEvent = true
supportsProgressReporting = true
supportsRunInTerminalRequest = true
supportsVariablePaging = true
supportsVariableType = true

[debugger.interactive.launchMessage]
command = "launch"
type = "request"

[debugger.interactive.launchMessage.arguments]
console = "externalTerminal"
cwd = "."
debugOptions = []
program = "main.py"
request = "launch"
type = "python"

[packager]
language = "python3"
ignoredPackages = ["unit_tests"]

[packager.features]
enabledForHosting = false
packageSearch = true
guessImports = true

[unitTest]
language = "python3"

[workflows]
runButton = "Run Persistent Bot"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"
waitForPort = 5000

[[workflows.workflow]]
name = "Start Telegram Bot"
author = 40745598
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python run_telegram_bot.py"

[[workflows.workflow]]
name = "Start Web App"
author = 40745598
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --workers 2 main:app"

[[workflows.workflow]]
name = "Start Complete System"
author = 40745598
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python start_system.py"

[[workflows.workflow]]
name = "Run Telegram Bot"
author = 40745598
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python run_telegram_bot.py"

[[workflows.workflow]]
name = "Run Bot with Dependencies"
author = 40745598
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install -r requirements.txt"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install flask-login gunicorn"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python run_telegram_bot.py"

[[workflows.workflow]]
name = "Run Persistent Bot"
author = 40745598
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install -r requirements.txt"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install flask-login gunicorn"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python keep_alive.py"

[[ports]]
localPort = 5000
externalPort = 80
